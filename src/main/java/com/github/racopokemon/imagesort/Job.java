package com.github.racopokemon.imagesort;
/*
 * Jobs are single file operations requested by the user. 
 * They each can execute themselves and know the number of sub-steps to them etc.
 * They are generated by the user in various ways, packed together in a list and then at some point passed
 * to a FileOperationsWindow (we use the JobExecutor interface to bundle the Job specific calls in there), 
 * which wraps a nice progress bar and protocol in case of errors around them. 
 */
public abstract class Job {

    //how many times is stepFinished() called by this job during its execution? Normal jobs (copy, move) will just have 1 step, 
    //but folder steps can be nested for all operations executed afterwards inside it. 
    public abstract int getNumberOfSteps(); 

    //call this from a separate execution thread, that is not connected to a gui thread, where it is okay for operations to take time
    public abstract void execute(JobReportingInterface target); 

}